name: Run Tests

on: [push, pull_request]

jobs:

  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go: [1.12, 1.13, 1.14]
    name: ${{ matrix.os }} @ Go ${{ matrix.go }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Go ${{ matrix.go }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go }}

      - name: Set GOPATH, PATH and ENV
        run: |
          echo "::set-env name=GOPATH::$(dirname $GITHUB_WORKSPACE)"
          echo "::set-env name=GO111MODULE::on"
          echo "::set-env name=GOPROXY::https://proxy.golang.org"
          echo "::add-path::$(dirname $GITHUB_WORKSPACE)/bin"
        shell: bash

      - name: Checkout code
        uses: actions/checkout@v1
        with:
          ref: ${{ github.ref }}

      - name: Generate & format check
        if: matrix.go == 1.14 && matrix.os == 'ubuntu-latest'
        run: |
          go generate
          modified="$(git status --porcelain)"
          echo "$modified" >&2
          test -z "$modified"
          test -z $(gofmt -l .)

      - name: Vet
        run: go run cli/internal/build/build.go vet

      - name: Test
        run: go run cli/internal/build/build.go test -tags docgen

      - name: Check binary size
        run: |
          go run cli/internal/build/build.go check-binary-size
          go run cli/internal/build/build.go check-binary-size -tags docgen

      - name: Upload coverage to Codecov
        if: success() && matrix.go == 1.14 && matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v1
        with:
          token: 22e9827a-122d-4783-9b2d-2bf49c2994ac
          fail_ci_if_error: true

  test-docs:
    name: test-docs
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.14
        uses: actions/setup-go@v1
        with:
          go-version: 1.14

      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Set GOPATH, PATH and ENV
        run: |
          echo "::set-env name=GOPATH::$(dirname $GITHUB_WORKSPACE)"
          echo "::set-env name=GO111MODULE::on"
          echo "::set-env name=GOPROXY::https://proxy.golang.org"
          echo "::add-path::$(dirname $GITHUB_WORKSPACE)/bin"
        shell: bash

      - name: Checkout code
        uses: actions/checkout@v1
        with:
          ref: ${{ github.ref }}

      - name: Install dependencies
        run: |
          mkdir -p $GOPATH/bin
          curl -L -o $GOPATH/bin/gfmrun "https://github.com/urfave/gfmrun/releases/download/v1.2.14/gfmrun-$(go env GOOS)-amd64-v1.2.14"
          chmod +x $GOPATH/bin/gfmrun
          npm install -g markdown-toc@1.2.0

      - name: Run tests
        run: |
          go run cli/internal/build/build.go gfmrun docs/README.md
          go run cli/internal/build/build.go toc docs/README.md
